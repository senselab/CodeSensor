import java.io._
import scala.util.Sorting.quickSort
import org.msgpack.annotation.Message
import org.msgpack.ScalaMessagePack


object SortBinary {
	def main(args: Array[String]) = {
	
		Sort("warmup.txt", "garbage.txt")
		Sort("input.txt", "output.txt")
  	}

	def Sort(szInfile: String, szOutfile: String) {

	  	var in:FileInputStream = null
	  	var out:FileOutputStream = null
	  
	  	try {
		  	in =  new FileInputStream(szInfile) 
		  	out = new FileOutputStream(szOutfile)

		    val cntTestCases : Int = ScalaMessagePack.read[Int](in)

		    println(f"There are $cntTestCases%d test cases...")

		    var i = 0

		    for( i <- 1 to cntTestCases)	{
         		var numbers: Array[Int] = ScalaMessagePack.read[Array[Int]](in)
         		println("case %d has %d elements".format(i,numbers.length))

         		scala.util.Sorting.quickSort(numbers)
         		out.write(ScalaMessagePack.write(numbers))
         	}
		}
		catch {
		    case e: IOException => e.printStackTrace
		} 
		finally {
			in.close
			out.close
		}	
	}
}